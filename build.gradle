plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.5'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
	id 'jacoco'
	id 'org.sonarqube' version '4.2.1.3168'
}

group = 'com.postech-hackaton'
version = '1.0.0'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	generatedMapperSourcesDir = "${buildDir}/generated-src/mapstruct/main"
	javaLanguageLevel = '17'
	mapstructVersion = "1.6.0.Beta1"
	lombokVersion = "1.18.30"
	lombokMapstructBindingVersion = "0.2.0"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.hibernate:hibernate-validator:6.2.0.Final'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-api:2.1.0'
	implementation 'com.mysql:mysql-connector-j'
	implementation "org.mapstruct:mapstruct:${mapstructVersion}", "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}", "org.projectlombok:lombok:${lombokVersion}", "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.hsqldb:hsqldb:2.7.1'
	implementation 'org.jacoco:org.jacoco.core:0.8.7'
}


tasks.named('test') {
	useJUnitPlatform()
}

jacoco {
	toolVersion = '0.8.10'
}

jacocoTestReport {
	getExecutionData().setFrom(fileTree(buildDir).include('/jacoco/*.exec'))
	reports {
		csv.required.set(false)
		xml.required.set(true)
		xml.outputLocation.set(file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml"))
	}
	dependsOn test
}

test {
	finalizedBy jacocoTestReport
}


sonar {
	properties {
		property "sonar.projectKey", "postech-hackaton-company-sa_postech-hackaton-funcionarios"
		property "sonar.organization", "postech-hackaton-company-sa"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}
